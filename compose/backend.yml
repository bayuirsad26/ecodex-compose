# Shared configuration for all backend services
x-backend-defaults: &backend-defaults
  image: ${BACKEND_IMAGE:-ecodex/backend:latest}
  restart: unless-stopped
  logging:
    driver: "json-file"
    options:
      max-size: "10m"
      max-file: "3"

# Configuration for services that need database connectivity
x-backend-with-db: &backend-with-db
  <<: *backend-defaults
  depends_on:
    postgres:
      condition: service_healthy
    ipfs:
      condition: service_healthy
  env_file:
    - ../config/backend/backend.env

services:
  # Main API service
  api:
    <<: *backend-with-db
    deploy:
      replicas: ${API_REPLICAS}
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
      restart_policy:
        condition: on-failure
    environment:
      RUN_MODE: api
    labels:
      - traefik.enable=true
      - traefik.http.routers.pfc-api.rule=Host(`${API_DOMAIN}`)
      - traefik.http.routers.pfc-api.entrypoints=websecure
      - traefik.http.services.pfc-api.loadbalancer.server.port=3000
      - traefik.http.routers.pfc-api.tls=true
      - traefik.http.routers.pfc-api.tls.certresolver=letsencrypt
      # Security and rate limiting
      - traefik.http.routers.pfc-api.middlewares=api-ratelimit,api-security,api-cors
      - traefik.http.middlewares.api-ratelimit.ratelimit.average=100
      - traefik.http.middlewares.api-ratelimit.ratelimit.burst=50
      - traefik.http.middlewares.api-ratelimit.ratelimit.period=1m
      # Security headers
      - traefik.http.middlewares.api-security.headers.stsSeconds=31536000
      - traefik.http.middlewares.api-security.headers.stsIncludeSubdomains=true
      - traefik.http.middlewares.api-security.headers.contentTypeNosniff=true
      - traefik.http.middlewares.api-security.headers.browserXssFilter=true
      - traefik.http.middlewares.api-security.headers.referrerPolicy=strict-origin-when-cross-origin
      # CORS Configuration
      - traefik.http.middlewares.api-cors.headers.accessControlAllowCredentials=true
      - traefik.http.middlewares.api-cors.headers.accessControlAllowMethods=GET,OPTIONS,PUT,POST,DELETE
      - traefik.http.middlewares.api-cors.headers.accessControlAllowOriginList=${API_ALLOWED_ORIGINS}
      - traefik.http.middlewares.api-cors.headers.accessControlAllowHeaders=Content-Type,Authorization,X-Requested-With
      - traefik.http.middlewares.api-cors.headers.accessControlMaxAge=86400
      - traefik.http.middlewares.api-cors.headers.addVaryHeader=true

  # Worker service
  worker:
    <<: *backend-with-db
    deploy:
      replicas: ${SERVICE_REPLICAS}
      update_config:
        parallelism: 1
        order: start-first
    environment:
      RUN_MODE: worker
    labels:
      - traefik.enable=false

  # Launchpad service
  launchpad:
    <<: *backend-with-db
    deploy:
      replicas: ${SERVICE_REPLICAS}
      update_config:
        parallelism: 1
        order: start-first
    environment:
      RUN_MODE: launchpad
    labels:
      - traefik.enable=false
